{
  "name": "heroku-node-red-test2",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "heroku": "npm run heroku:subdir-install && npm run heroku:auth-launch",
    "heroku:auth-launch": "node-red -u ./node-red_dir -s ./node-red_dir/settings.js",
    "heroku:subdir-install": "npm --prefix ./node-red_dir install ./node-red_dir",
    "node-red": "./node_modules/.bin/node-red -p 18801 -u ./node-red_dir -s ./node-red_dir/settings.js -D adminAuth=null",
    "init": "npm run init:mkdir && npm run init:get-settings.js",
    "init:mkdir": "node -e \"console.log('[START] mkdir-node-red_dir');const fs = require('fs');const path_nodered_dir = './node-red_dir';if (fs.existsSync(path_nodered_dir)) {console.log( '[ALERT] ' + path_nodered_dir + ' has existed!');} else {console.log('[OK] mkdir -> ' + path_nodered_dir );fs.mkdirSync(path_nodered_dir);}\"",
    "init:get-settings.js": "node -e \"const url = 'https://raw.githubusercontent.com/node-red/node-red/master/packages/node_modules/node-red/settings.js';const stream_output_path = './node-red_dir/settings.js';if (fs.existsSync(stream_output_path)) {console.log( '[ALERT] ' + stream_output_path + ' has existed!');} else {console.log('[START] download settings.js ...');const https = require('https');const fs = require('fs');const stream = fs.createWriteStream(stream_output_path);https.get(url, function(res){res.pipe(stream);res.on('end', function () {stream.close();console.log('[OK] got settings.js! -> ' + stream_output_path);});});}\""
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "node-red": "^2.0.6"
  }
}
